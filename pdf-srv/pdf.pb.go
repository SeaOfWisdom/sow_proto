// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: pdf-srv/pdf.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaperContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Introduction      string   `protobuf:"bytes,1,opt,name=introduction,proto3" json:"introduction,omitempty"`
	GoalMethodsDesign string   `protobuf:"bytes,2,opt,name=goal_methods_design,json=goalMethodsDesign,proto3" json:"goal_methods_design,omitempty"`
	ResultDiscussion  string   `protobuf:"bytes,3,opt,name=result_discussion,json=resultDiscussion,proto3" json:"result_discussion,omitempty"`
	Conclusion        string   `protobuf:"bytes,4,opt,name=conclusion,proto3" json:"conclusion,omitempty"`
	Literature        string   `protobuf:"bytes,5,opt,name=literature,proto3" json:"literature,omitempty"`
	Images            [][]byte `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
	Tables            []*Table `protobuf:"bytes,7,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *PaperContent) Reset() {
	*x = PaperContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperContent) ProtoMessage() {}

func (x *PaperContent) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperContent.ProtoReflect.Descriptor instead.
func (*PaperContent) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{0}
}

func (x *PaperContent) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *PaperContent) GetGoalMethodsDesign() string {
	if x != nil {
		return x.GoalMethodsDesign
	}
	return ""
}

func (x *PaperContent) GetResultDiscussion() string {
	if x != nil {
		return x.ResultDiscussion
	}
	return ""
}

func (x *PaperContent) GetConclusion() string {
	if x != nil {
		return x.Conclusion
	}
	return ""
}

func (x *PaperContent) GetLiterature() string {
	if x != nil {
		return x.Literature
	}
	return ""
}

func (x *PaperContent) GetImages() [][]byte {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *PaperContent) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type PaperMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author   *AuthorInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Title    string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Abstract string      `protobuf:"bytes,3,opt,name=abstract,proto3" json:"abstract,omitempty"`
	Tags     []string    `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Lang     string      `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *PaperMeta) Reset() {
	*x = PaperMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperMeta) ProtoMessage() {}

func (x *PaperMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperMeta.ProtoReflect.Descriptor instead.
func (*PaperMeta) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{1}
}

func (x *PaperMeta) GetAuthor() *AuthorInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *PaperMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PaperMeta) GetAbstract() string {
	if x != nil {
		return x.Abstract
	}
	return ""
}

func (x *PaperMeta) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PaperMeta) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type ScientificPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta    *PaperMeta    `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Content *PaperContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ScientificPaperRequest) Reset() {
	*x = ScientificPaperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScientificPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScientificPaperRequest) ProtoMessage() {}

func (x *ScientificPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScientificPaperRequest.ProtoReflect.Descriptor instead.
func (*ScientificPaperRequest) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{2}
}

func (x *ScientificPaperRequest) GetMeta() *PaperMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ScientificPaperRequest) GetContent() *PaperContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []string       `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Columns []*StringArray `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{3}
}

func (x *Table) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Table) GetColumns() []*StringArray {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ScientificPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pdf []byte `protobuf:"bytes,1,opt,name=pdf,proto3" json:"pdf,omitempty"`
}

func (x *ScientificPaperResponse) Reset() {
	*x = ScientificPaperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScientificPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScientificPaperResponse) ProtoMessage() {}

func (x *ScientificPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScientificPaperResponse.ProtoReflect.Descriptor instead.
func (*ScientificPaperResponse) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{4}
}

func (x *ScientificPaperResponse) GetPdf() []byte {
	if x != nil {
		return x.Pdf
	}
	return nil
}

type AuthorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastName   string `protobuf:"bytes,1,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstName  string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName string `protobuf:"bytes,3,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Address    string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Nickname   string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *AuthorInfo) Reset() {
	*x = AuthorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorInfo) ProtoMessage() {}

func (x *AuthorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorInfo.ProtoReflect.Descriptor instead.
func (*AuthorInfo) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{5}
}

func (x *AuthorInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AuthorInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AuthorInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AuthorInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AuthorInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type StringArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StringArray) Reset() {
	*x = StringArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_srv_pdf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringArray) ProtoMessage() {}

func (x *StringArray) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_srv_pdf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringArray.ProtoReflect.Descriptor instead.
func (*StringArray) Descriptor() ([]byte, []int) {
	return file_pdf_srv_pdf_proto_rawDescGZIP(), []int{6}
}

func (x *StringArray) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_pdf_srv_pdf_proto protoreflect.FileDescriptor

var file_pdf_srv_pdf_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x64, 0x66, 0x2d, 0x73, 0x72, 0x76, 0x2f, 0x70, 0x64, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x22, 0x95, 0x02, 0x0a, 0x0c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x6f, 0x61, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x6f, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x06,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x09, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x7d, 0x0a, 0x16, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x35, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x2b, 0x0a,
	0x17, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x64, 0x66, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0b,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x32, 0xdd, 0x01, 0x0a, 0x0a, 0x50, 0x64, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x4d, 0x61, 0x6b, 0x65, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x18, 0x4d, 0x61, 0x6b, 0x65,
	0x53, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c,
	0x61, 0x74, 0x65, 0x78, 0x12, 0x25, 0x2e, 0x70, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x63, 0x69, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pdf_srv_pdf_proto_rawDescOnce sync.Once
	file_pdf_srv_pdf_proto_rawDescData = file_pdf_srv_pdf_proto_rawDesc
)

func file_pdf_srv_pdf_proto_rawDescGZIP() []byte {
	file_pdf_srv_pdf_proto_rawDescOnce.Do(func() {
		file_pdf_srv_pdf_proto_rawDescData = protoimpl.X.CompressGZIP(file_pdf_srv_pdf_proto_rawDescData)
	})
	return file_pdf_srv_pdf_proto_rawDescData
}

var file_pdf_srv_pdf_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pdf_srv_pdf_proto_goTypes = []interface{}{
	(*PaperContent)(nil),            // 0: pp.contractor.PaperContent
	(*PaperMeta)(nil),               // 1: pp.contractor.PaperMeta
	(*ScientificPaperRequest)(nil),  // 2: pp.contractor.ScientificPaperRequest
	(*Table)(nil),                   // 3: pp.contractor.Table
	(*ScientificPaperResponse)(nil), // 4: pp.contractor.ScientificPaperResponse
	(*AuthorInfo)(nil),              // 5: pp.contractor.AuthorInfo
	(*StringArray)(nil),             // 6: pp.contractor.StringArray
}
var file_pdf_srv_pdf_proto_depIdxs = []int32{
	3, // 0: pp.contractor.PaperContent.tables:type_name -> pp.contractor.Table
	5, // 1: pp.contractor.PaperMeta.author:type_name -> pp.contractor.AuthorInfo
	1, // 2: pp.contractor.ScientificPaperRequest.meta:type_name -> pp.contractor.PaperMeta
	0, // 3: pp.contractor.ScientificPaperRequest.content:type_name -> pp.contractor.PaperContent
	6, // 4: pp.contractor.Table.columns:type_name -> pp.contractor.StringArray
	2, // 5: pp.contractor.PdfService.MakeScientificPaper:input_type -> pp.contractor.ScientificPaperRequest
	2, // 6: pp.contractor.PdfService.MakeScientificPaperLatex:input_type -> pp.contractor.ScientificPaperRequest
	4, // 7: pp.contractor.PdfService.MakeScientificPaper:output_type -> pp.contractor.ScientificPaperResponse
	4, // 8: pp.contractor.PdfService.MakeScientificPaperLatex:output_type -> pp.contractor.ScientificPaperResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pdf_srv_pdf_proto_init() }
func file_pdf_srv_pdf_proto_init() {
	if File_pdf_srv_pdf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pdf_srv_pdf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_srv_pdf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_srv_pdf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScientificPaperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_srv_pdf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_srv_pdf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScientificPaperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_srv_pdf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_srv_pdf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pdf_srv_pdf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pdf_srv_pdf_proto_goTypes,
		DependencyIndexes: file_pdf_srv_pdf_proto_depIdxs,
		MessageInfos:      file_pdf_srv_pdf_proto_msgTypes,
	}.Build()
	File_pdf_srv_pdf_proto = out.File
	file_pdf_srv_pdf_proto_rawDesc = nil
	file_pdf_srv_pdf_proto_goTypes = nil
	file_pdf_srv_pdf_proto_depIdxs = nil
}
